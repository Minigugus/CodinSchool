# Version « Développement » du fichier de configuration de « docker-compose ».

# Lance le serveur de développement dans le dossier courant EN LE PARTAGEANT AVEC LE CONTAINER,
# c'est-à-dire que le container ET l'hôte voient les mêmes fichiers en même temps.
# Une modification sur l'un est donc répercutée sur l'autre.

# Si vous cherchez la documentation de ces fichiers Docker Compose,
# référez-vous au fichier « docker-compose.prod.yml ».

version: '3.2'
services:
  web:
    image: node:10-alpine
    working_dir: '/usr/src/app'
    command: [ 'sh', '-c', 'npm run servir' ]
    # restart: unless-stopped
    ports:
      - 4000:4000
      - 8080:8080
    volumes:
      - type: bind
        source: .
        target: /usr/src/app
    links:
      - bdd

  bdd:
    image: postgres:10-alpine
    ports:
      - 5432:5432
    # volumes:
    #   - postgres:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: codinschool
      POSTGRES_PASSWORD: codinschool
      POSTGRES_DATABASE: codinschool
# volumes:
#   postgres: {}
